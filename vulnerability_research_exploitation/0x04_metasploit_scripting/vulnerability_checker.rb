require 'msf/core'

class MetasploitModule < Msf::Auxiliary
  include Msf::Auxiliary::Scanner

  def initialize
    super(
      'Name'        => 'MS17-010 Vulnerability Checker',
      'Description' => 'Checks if a target system is vulnerable to MS17-010 (EternalBlue)',
      'Author'      => 'Axel Malka',
      'License'     => MSF_LICENSE
    )

    register_options(
      [
        Opt::RHOST(), # Target IP
        OptInt.new('RPORT', [true, 'Target port (SMB)', 445])
      ]
    )
  end

  def run_host(ip)
    port = datastore['RPORT']

    print_status("Checking #{ip} for MS17-010 vulnerability")

    begin
      sock = connect(nil, ip, port)
      smb = Rex::Proto::SMB::SimpleClient.new(sock)
      smb.connect

      if smb.default_server.security_mode & 0x02 != 0
        print_good("#{ip} is vulnerable to MS17-010.")
      else
        print_status("#{ip} does not appear to be vulnerable to MS17-010.")
      end

    rescue Rex::ConnectionError
      print_error("Could not connect to #{ip}:#{port}")
    ensure
      disconnect
    end
  end
end